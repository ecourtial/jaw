version: '2.1'
executors:
  php:
    docker:
      - image: php:8.1-alpine
        name: php
        environment:
          DATABASE_URL: mysql://jaw:jaw@mysql:3306/jaw?serverVersion=8.0&charset=utf8
      - image: mysql:8.0
        name: mysql
        environment:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: jaw
          MYSQL_USER: jaw
          MYSQL_PASSWORD: jaw
    working_directory: ~/repo
    resource_class: medium

commands:
  alpine_checkout:
    description: Optimize Alpine checkout.
    steps:
      - run:
          name: "Install requirements for checkout"
          command: |
            apk add --update git openssh-client curl make
      - run:
          name: "Install required PHP extensions"
          command: |
            docker-php-ext-install -j$(nproc) \
                    opcache \
                    pdo_mysql \
                ;
      - checkout

jobs:
  composer:
    executor: php
    steps:
      - alpine_checkout
      - restore_cache:
          key: composer-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}
      - run:
          name: composer
          command: |
            if [[ ! -f vendor/autoload.php ]]; then
                curl https://getcomposer.org/composer-stable.phar --location --silent  --output /usr/bin/composer; \
                chmod +x /usr/bin/composer; \
                composer install --no-progress --no-interaction;
            fi \

      - save_cache:
          key: composer-{{ checksum "composer.json" }}-{{ checksum "composer.lock" }}
          paths:
            - ./vendor
      - persist_to_workspace:
          root: .
          paths:
            - vendor

  static-analysis:
    executor: php
    steps:
      - alpine_checkout
      - attach_workspace:
          at: .
      - run:
          name: phpcs
          command: |
            cd tools/php-cs-fixer; \
            curl https://getcomposer.org/composer-stable.phar --location --silent  --output /usr/bin/composer; \
            chmod +x /usr/bin/composer; \
            composer install --no-progress --no-interaction; \
            cd .. \
            vendor/bin/php-cs-fixer fix src --dry-run;
      - run:
          name: phpstan
          command: make phpstan_command

  tests:
    executor: php
    steps:
      - alpine_checkout
      - attach_workspace:
          at: .
      - run:
          name: Run migrations
          command: make migrate_command
      - run:
          name: Validate DB schema
          command: make schema_validate_command
      - run:
          name: Create new admin user
          command: bin/console app:add-user some_username_admin somePassword foo@bar.com "Foo BAR" --admin
      - run:
          name: Create new regular user
          command: bin/console app:add-user some_username_not_admin somePassword foofoo@barbar.com "Foofoo BARBAR"
      - run:
          name: phpunit
          command: make phpunit_command

  security:
    executor: php
    working_directory: ~/repo
    steps:
      - alpine_checkout
      - run:
          name: Install SensioLabs Security Checker
          command: |
            curl -Ls https://github.com/fabpot/local-php-security-checker/releases/download/v1.2.0/local-php-security-checker_1.2.0_linux_amd64 -o /usr/local/bin/local-php-security-checker; \
            chmod +x /usr/local/bin/local-php-security-checker;
      - run:
          name: Checks dependencies security vulnerabilities
          command: local-php-security-checker

workflows:
  version: '2'
  Code quality:
    jobs:
      - composer
      - security
      - static-analysis:
          requires:
            - composer
      - tests:
          requires:
            - composer
